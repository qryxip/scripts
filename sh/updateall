#!/bin/bash

set -euE -o pipefail

if [ "$TERM" = dumb ]; then
  yellow=''
  bold=''
  ansi_reset=''
else
  yellow=`echo -e '\e[33m'`
  bold=`echo -e '\e[1m'`
  ansi_reset=`echo -e '\e[m'`
fi

if [ "`whoami`" = root ]; then
  echo "${yellow}Don't run this script as root.${ansi_reset}"
  exit 1
fi

if which yay > /dev/null 2>&1; then
  echo "${bold}yay${ansi_reset}"
  PATH="/usr/bin:$PATH" yay -Syu
fi

if [ -e /opt/xkeysnail/bin/pip3 ]; then
  echo -e "\n${bold}xkeysnail${ansi_reset}"
  sudo /opt/xkeysnail/bin/pip3 install -U pip xkeysnail
fi

PYTHON_VERSION=3.7.2
echo -e "\n${bold}pip3 (~/tools/python/$PYTHON_VERSION/)${ansi_reset}"
if [ -e ~/tools/python/"$PYTHON_VERSION"/http/bin/pip3 ]; then
  ~/tools/python/"$PYTHON_VERSION"/http/bin/pip3 install -U pip httpie
fi
if [ -e ~/tools/python/"$PYTHON_VERSION"/oj/bin/pip3 ]; then
  ~/tools/python/"$PYTHON_VERSION"/oj/bin/pip3 install -U pip online-judge-tools
fi
if [ -e ~/tools/python/"$PYTHON_VERSION"/pipenv/bin/pip3 ]; then
  ~/tools/python/"$PYTHON_VERSION"/pipenv/bin/pip3 install -U pip pipenv
fi
if [ -e ~/tools/python/"$PYTHON_VERSION"/ptpython/bin/pip3 ]; then
  ~/tools/python/"$PYTHON_VERSION"/ptpython/bin/pip3 install -U pip ptpython
fi
if [ -e ~/tools/python/"$PYTHON_VERSION"/pygmentize/bin/pip3 ]; then
  ~/tools/python/"$PYTHON_VERSION"/pygmentize/bin/pip3 install -U pip tw2.pygmentize
fi
if [ -e ~/tools/python/"$PYTHON_VERSION"/ranger/bin/pip3 ]; then
  ~/tools/python/"$PYTHON_VERSION"/ranger/bin/pip3 install -U pip ranger-fm
fi
if which gem > /dev/null 2>&1; then
  echo -e "\n${bold}gem${ansi_reset}"
  gem update
fi

if which npm > /dev/null 2>&1; then
  echo -e "\n${bold}npm${ansi_reset}"
  node_version=$(node --version)
  wd=$(pwd)
  cd ~/tools/node/"$node_version"/textlint
  echo -e "\n${bold}npm (~/tools/node/$node_version/textlint)${ansi_reset}"
  if [ -z "$(npm update)" ]; then
    echo "${bold}No packages to update.${ansi_reset}"
  fi
  cd ~/tools/node/"$node_version"/typescript
  echo -e "\n${bold}npm (~/tools/node/$node_version/typescript)${ansi_reset}"
  if [ -z "$(npm update)" ]; then
    echo "${bold}No packages to update.${ansi_reset}"
  fi
  cd "$wd"
fi

if false; then
  echo -e "\n${bold}Go${ansi_reset}"
  go get -u all
fi

if which opam > /dev/null 2>&1; then
  echo -e "\n${bold}Opam${ansi_reset}"
  if which netctl-auto > /dev/null 2>&1 && netctl-auto list | rg '^\*.*ac\.jp$' > /dev/null; then
    echo skipping...
  else
    wd=$(pwd)
    cd ~/.ghq/github.com/gfngfn/SATySFi
    git pull --ff-only origin master
    cd "$wd"
    opam update
    opam upgrade
  fi
fi

if [ -e ~/.cargo/bin/rustup ]; then
  echo -e "\n${bold}Cargo${ansi_reset}"
  ~/.cargo/bin/rustup self update
  racer_outdated=$(cargo install-update -la | sed -n 's/^racer[0-9v\. ]\+\(Yes\)/\1/gp')
  tarpaulin_outdated=$(cargo install-update -la | sed -n 's/^cargo-tarpaulin[0-9v\. ]\+\(Yes\)/\1/gp')
  if [ -n "${racer_outdated}${tarpaulin_outdated}" ]; then
    ~/.cargo/bin/rustup update nightly
    ~/.cargo/bin/cargo +nightly install-update racer
  fi
  ~/.cargo/bin/rustup update stable
  ~/.cargo/bin/cargo +stable install-update -ag
  # if [ -z $(cargo install-update -la | sed -n 's/^alacritty[0-9v\. ]\+\(No\)/\1/gp') ]; then
  #   read -p 'Update "alacritty"? [y/N]: ' reply
  #   case $reply in
  #     "y" | "Y" ) ~/.cargo/bin/cargo +stable install-update -g alacritty;;
  #     * ) echo skipped;;
  #   esac
  # fi
fi
